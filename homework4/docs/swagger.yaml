basePath: /api/v1
definitions:
  columns.UpdatePositionRequestBody:
    properties:
      afterColumnId:
        type: integer
    type: object
  common.Column:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  common.ColumnExpanded:
    properties:
      id:
        type: integer
      name:
        type: string
      tasks:
        items:
          $ref: '#/definitions/common.Task'
        type: array
    type: object
  common.ColumnSettableFields:
    properties:
      name:
        type: string
    type: object
  common.Comment:
    properties:
      id:
        type: integer
      text:
        type: string
    type: object
  common.CommentSettableFields:
    properties:
      text:
        type: string
    type: object
  common.Project:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  common.ProjectExpanded:
    properties:
      columns:
        items:
          $ref: '#/definitions/common.ColumnExpanded'
        type: array
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  common.ProjectSettableFields:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  common.Task:
    properties:
      column_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      project_id:
        type: integer
    type: object
  common.TaskExpanded:
    properties:
      column_id:
        type: integer
      comments:
        items:
          $ref: '#/definitions/common.Comment'
        type: array
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      project_id:
        type: integer
    type: object
  common.TaskSettableFields:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  tasks.UpdatePositionRequestBody:
    properties:
      after_task_id:
        type: integer
      new_column_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: ua.challenger@gmail.com
    name: Andrew
  description: This is Trello-like task management application
  license: {}
  title: API
  version: "1.0"
paths:
  /projects:
    get:
      description: Get all projects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/common.Project'
            type: array
      summary: Get projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create new project with single "default" column
      parameters:
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/common.ProjectSettableFields'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: /project/1
              type: string
          schema:
            $ref: '#/definitions/common.ProjectExpanded'
      summary: Create project
      tags:
      - projects
  /projects/{project_id}:
    delete:
      description: Delete project and all sub-resources
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      responses:
        "204": {}
      summary: Delete project
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: Get project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - default: false
        description: expand by sub-resources
        in: query
        name: expanded
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.ProjectExpanded'
      summary: Get project
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/common.ProjectSettableFields'
      responses:
        "204": {}
      summary: Update project
      tags:
      - projects
  /projects/{project_id}/columns:
    get:
      description: Get all columns within project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/common.Column'
            type: array
      summary: Get columns
      tags:
      - columns
    post:
      consumes:
      - application/json
      description: Create new column
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/common.ColumnSettableFields'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: /project/1/columns/1
              type: string
          schema:
            $ref: '#/definitions/common.Column'
      summary: Create column
      tags:
      - columns
  /projects/{project_id}/columns/{column_id}:
    delete:
      description: Delete column and move all tasks to the neighbor
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - description: Column ID
        in: path
        name: column_id
        required: true
        type: integer
      responses:
        "204": {}
      summary: Delete column
      tags:
      - columns
    get:
      description: Get column
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - description: Column ID
        in: path
        name: column_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Column'
      summary: Get column
      tags:
      - columns
    put:
      consumes:
      - application/json
      description: Update column
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - description: Column ID
        in: path
        name: column_id
        required: true
        type: integer
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/common.ColumnSettableFields'
      responses:
        "204": {}
      summary: Update column
      tags:
      - columns
  /projects/{project_id}/columns/{column_id}/position:
    put:
      consumes:
      - application/json
      description: |-
        Place column after column specified by after_column_id
        if it is grater than 0, otherwise at the beginning
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - description: Column ID
        in: path
        name: column_id
        required: true
        type: integer
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/columns.UpdatePositionRequestBody'
      responses:
        "204": {}
      summary: Update column's position
      tags:
      - columns
  /projects/{project_id}/columns/{column_id}/tasks:
    post:
      consumes:
      - application/json
      description: Create new task
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - description: Column ID
        in: path
        name: column_id
        required: true
        type: integer
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/common.TaskSettableFields'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: /tasks/1
              type: string
          schema:
            $ref: '#/definitions/common.Task'
      summary: Create task
      tags:
      - tasks
  /tasks/{task_id}:
    delete:
      description: Delete task with all sub-resources
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      responses:
        "204": {}
      summary: Delete task
      tags:
      - tasks
    get:
      description: Get task
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      - default: false
        description: expand by sub-resources
        in: query
        name: expanded
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.TaskExpanded'
      summary: Get task
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Update task
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/common.TaskSettableFields'
      responses:
        "204": {}
      summary: Update task
      tags:
      - tasks
  /tasks/{task_id}/comments:
    get:
      description: Get all comments within task
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/common.Comment'
            type: array
      summary: Get comments
      tags:
      - comments
    post:
      consumes:
      - application/json
      description: Create new comment
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/common.CommentSettableFields'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: /tasks/1/comments/1
              type: string
          schema:
            $ref: '#/definitions/common.Comment'
      summary: Create comment
      tags:
      - comments
  /tasks/{task_id}/comments/{comment_id}:
    delete:
      description: Delete comment
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      - description: Comment ID
        in: path
        name: comment_id
        required: true
        type: integer
      responses:
        "204": {}
      summary: Delete comment
      tags:
      - comments
    get:
      description: Get comment
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      - description: Comment ID
        in: path
        name: comment_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Comment'
      summary: Get comment
      tags:
      - comments
    put:
      consumes:
      - application/json
      description: Update comment
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      - description: Comment ID
        in: path
        name: comment_id
        required: true
        type: integer
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/common.CommentSettableFields'
      responses:
        "204": {}
      summary: Update comment
      tags:
      - comments
  /tasks/{task_id}/position:
    put:
      consumes:
      - application/json
      description: |-
        Place task after task specified by after_task_id
        if it is grater than 0, otherwise at the top of specified by new_column_id column
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/tasks.UpdatePositionRequestBody'
      responses:
        "204": {}
      summary: Update task's position
      tags:
      - tasks
swagger: "2.0"
